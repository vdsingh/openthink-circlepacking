[{"/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/index.js":"1","/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/reportWebVitals.js":"2","/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/data/postDummyData.js":"3","/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/data/data.js":"4","/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/components/Hero.js":"5","/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/components/Heading.js":"6","/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/components/ZoomableCirclePack.js":"7","/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/components/CirclePack.js":"8","/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/data/simpleData.js":"9"},{"size":556,"mtime":1615765711928,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1611075558712,"results":"12","hashOfConfig":"11"},{"size":6055,"mtime":1617713769471,"results":"13","hashOfConfig":"11"},{"size":12984,"mtime":1611078020998,"results":"14","hashOfConfig":"11"},{"size":238,"mtime":1615327830529,"results":"15","hashOfConfig":"11"},{"size":832,"mtime":1615328916220,"results":"16","hashOfConfig":"11"},{"size":9787,"mtime":1617716146375,"results":"17","hashOfConfig":"11"},{"size":3860,"mtime":1615327846542,"results":"18","hashOfConfig":"11"},{"size":582,"mtime":1617713892502,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"2vbd1d",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/index.js",[],["42","43"],"/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/reportWebVitals.js",[],"/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/data/postDummyData.js",[],"/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/data/data.js",[],"/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/components/Hero.js",["44","45"],"import React, { useEffect, useRef } from \"react\";\n\nimport Heading from \"./Heading\";\n\nexport default function Hero() {\n  return (\n    <div className=\"wrapper\">\n      <Heading text=\"Hello World!\" arc={120} radius={400} />\n    </div>\n  );\n}\n",["46","47"],"/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/components/Heading.js",[],"/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/components/ZoomableCirclePack.js",["48","49","50","51","52","53"],"/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/components/CirclePack.js",["54"],"import React, { useRef, useEffect } from \"react\";\n\n// import \"./App.css\";\nimport * as d3 from \"d3\";\n// import { data } from \"./data/data.js\";\n\nimport { dummyPosts, dummyRelations } from \"../data/postDummyData.js\";\n\nfunction CirclePack() {\n  const svgRef = useRef();\n\n  const width = 400;\n  const height = 400;\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const color = d3.scaleSequential([8, 0], d3.interpolateMagma);\n    const format = d3.format(\",d\");\n\n    let pack = (data) =>\n      d3\n        .pack()\n        .size([width - 2, height - 2])\n        .padding(3)(\n        d3\n          .hierarchy(data)\n          .sum((d) => d.value)\n          .sort((a, b) => b.value - a.value)\n      );\n\n    const svg = d3.select(svgRef.current);\n    const root = pack(formatData(dummyPosts, dummyRelations));\n\n    svg\n      .attr(\"viewBox\", [0, 0, width, height])\n      .style(\"font\", \"10px sans-serif\")\n      .attr(\"text-anchor\", \"middle\");\n\n    const node = svg\n      .selectAll(\"g\")\n      .data(d3.group(root.descendants(), (d) => d.height))\n      .join(\"g\")\n      .selectAll(\"g\")\n      .data((d) => d[1])\n      .join(\"g\")\n      .attr(\"transform\", (d) => `translate(${d.x + 1},${d.y + 1})`);\n\n    node\n      .append(\"circle\")\n      .attr(\"r\", (d) => d.r)\n      .attr(\"fill\", (d) => d.data.color)\n      .attr(\"stroke\", \"black\")\n      .attr(\"stroke-width\", \"2\");\n\n    const leaf = node.filter((d) => !d.children);\n\n    leaf\n      .append(\"text\")\n      .append(\"tspan\")\n      .attr(\"x\", -25)\n      .attr(\"y\", 10)\n      .attr(\"class\", \"material-icons\")\n      .text((d) => d.data.icon);\n\n    leaf\n      .append(\"text\")\n      .attr(\"clip-path\", (d) => d.clipUid)\n      .selectAll(\"tspan\")\n      .data((d) => d.data.title.split(/(?=[A-Z][a-z])|\\s+/g))\n      .join(\"tspan\")\n      .attr(\"x\", 0)\n      .attr(\"y\", (d, i, nodes) => `${i - nodes.length / 2 + 0.8}em`)\n      .text((d) => d);\n\n    leaf.select(\"text\");\n\n    node.append(\"title\").text(\n      (d) =>\n        `${d\n          .ancestors()\n          .map((d) => d.data.title)\n          .reverse()\n          .join(\"/\")}\\n${format(d.value)}`\n    );\n  }, []);\n\n  return (\n    <React.Fragment>\n      <svg ref={svgRef} width={width} height={height}></svg>\n    </React.Fragment>\n  );\n}\n\nfunction formatData(posts, relations) {\n  //Array containing the root objects (the parents)\n  let roots = [];\n\n  //map to get posts by id {postID, postObject}\n  let postsMap = new Map();\n\n  let colorMap = new Map();\n  colorMap.set(\"Idea\", \"rgb(51,102,255)\");\n  colorMap.set(\"Topic\", \"rgb(255,204,102)\");\n  colorMap.set(\"Concern\", \"rgb(255,0,0)\");\n  colorMap.set(\"Information\", \"rgb(224,224,209)\");\n  colorMap.set(\"Action Item\", \"\");\n  colorMap.set(\"Event\", \"\");\n  colorMap.set(\"Question\", \"\");\n\n  let iconMap = new Map();\n  iconMap.set(\"Idea\", \"emoji_objects\");\n  iconMap.set(\"Topic\", \"device_hub\");\n  iconMap.set(\"Concern\", \"error\");\n  iconMap.set(\"Information\", \"info\");\n  iconMap.set(\"Action Item\", \"check_circle\");\n  iconMap.set(\"Event\", \"event\");\n  iconMap.set(\"Question\", \"help\");\n\n  //map each post by ID\n  posts.forEach((post) => {\n    //give each post object a children array\n    post.children = [];\n    post.value = Math.floor(Math.random() * 100 + 50);\n    post.color = colorMap.get(post.type);\n    post.icon = iconMap.get(post.type);\n\n    //map each post by its ID\n    postsMap.set(post._id, post);\n\n    //fill the roots array with all posts\n    roots.push(post);\n  });\n\n  for (let i = 0; i < relations.length; i++) {\n    let parent = postsMap.get(relations[i].post1);\n    let child = postsMap.get(relations[i].post2);\n\n    parent.children.push(child);\n    if (roots.includes(child)) roots.splice(roots.indexOf(child), 1);\n  }\n\n  return roots.length === 1\n    ? roots[0]\n    : {\n        value: 1,\n        children: roots,\n        color: colorMap.get(\"Idea\"),\n      };\n}\n\nexport default CirclePack;\n","/Users/viksingh/Desktop/Web Development/React Projects/openthink-circlepacking/src/data/simpleData.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":26},{"ruleId":"59","severity":1,"message":"63","line":1,"column":28,"nodeType":"61","messageId":"62","endLine":1,"endColumn":34},{"ruleId":"55","replacedBy":"64"},{"ruleId":"57","replacedBy":"65"},{"ruleId":"59","severity":1,"message":"66","line":5,"column":10,"nodeType":"61","messageId":"62","endLine":5,"endColumn":14},{"ruleId":"59","severity":1,"message":"67","line":8,"column":10,"nodeType":"61","messageId":"62","endLine":8,"endColumn":14},{"ruleId":"59","severity":1,"message":"68","line":90,"column":9,"nodeType":"61","messageId":"62","endLine":90,"endColumn":16},{"ruleId":"59","severity":1,"message":"69","line":91,"column":11,"nodeType":"61","messageId":"62","endLine":91,"endColumn":16},{"ruleId":"59","severity":1,"message":"70","line":203,"column":13,"nodeType":"61","messageId":"62","endLine":203,"endColumn":19},{"ruleId":"59","severity":1,"message":"68","line":277,"column":7,"nodeType":"61","messageId":"62","endLine":277,"endColumn":14},{"ruleId":"59","severity":1,"message":"71","line":17,"column":11,"nodeType":"61","messageId":"62","endLine":17,"endColumn":16},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.",["72"],["73"],"'data' is defined but never used.","'post' is defined but never used.","'counter' is assigned a value but never used.","'label' is assigned a value but never used.","'focus0' is assigned a value but never used.","'color' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]